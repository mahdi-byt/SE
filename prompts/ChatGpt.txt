۱. مدیریت کاربران و ثبت‌نام / ورود

نوشتن متد register برای ایجاد کاربر با نقش student و جلوگیری از نام کاربری تکراری.

نوشتن متد برای شمارش تعداد کاربران با نقش student.

نوشتن متد برای کلاس Admin که بتواند یک employee ایجاد کند.

افزودن ویژگی جدید isActive به کاربران student.

بهینه‌سازی متد login برای پشتیبانی از ویژگی isActive.

نوشتن متد برای تغییر رمز عبور کارمند و ذخیره تغییر در فایل JSON.

نوشتن متد برای کارمند جهت فعال/غیرفعال کردن دانشجو.

۲. کلاس کتاب و مدیریت کتاب‌ها

تعریف کلاس Book.

ایجاد JSON نمونه برای کتاب‌ها.

نوشتن متد جستجو در کلاس Book:

بر اساس نام کتاب

بر اساس نویسنده

بر اساس سال انتشار

با پشتیبانی از زیررشته‌ها و نمایش چندین نتیجه

افزودن ویژگی isAvailable به کلاس Book.

تغییر متد جستجو تا در دسترس بودن کتاب نیز نمایش داده شود.

نوشتن متد برای کارمند جهت اضافه کردن کتاب جدید.

نوشتن متد برای ویرایش اطلاعات کتاب که شامل:

عنوان

نویسنده

سال انتشار

وضعیت دسترسی (isAvailable)

۳. امانت گرفتن کتاب و مدیریت درخواست‌ها

تعریف کلاس BorrowRecord با فیلدهای:

نام کاربری دانشجو

ISBN کتاب

کارمند تحویل‌دهنده

کارمند دریافت‌کننده

تاریخ دریافت و تحویل

تاریخ پیشنهادی تحویل (dueDate)

نوشتن متد برای ثبت درخواست امانت توسط دانشجو (شامل ISBN و تاریخ پیشنهادی).

نوشتن متد برای کارمند جهت تایید درخواست امانت دانشجو.

متد امانت گرفتن باید فقط به کاربران فعال (isActive) اجازه دهد.

متد دریافت کتاب از دانشجو توسط کارمند و ثبت تاریخ تحویل.

نوشتن متدهای آماری:

تعداد کل امانت‌های یک دانشجو

تعداد کل کتاب‌های تحویل داده نشده

تعداد کل امانت‌هایی که با تأخیر تحویل داده شده‌اند

مشاهده گزارش تاریخچه امانت‌های یک دانشجو به همراه آمار

تعداد کل کتاب‌های امانت گرفته‌شده

مشاهده ۳ کتاب آخر امانت گرفته شده

مشاهده ۱۰ دانشجوی با بیشترین تأخیر

۴. منوهای تعاملی (User Menu)
۴.۱ منوی مهمان (Guest)

Register

Login

Search Book by Title

Count Students

Count Books

Get Total Borrowed Books

Show Last Three Borrowed Books

بعد از ورود موفق، خروج از منوی مهمان و ورود به منوی نقش کاربر (Student, Employee, Admin)

۴.۲ منوی دانشجو (Student)

جستجوی کتاب‌ها (Title/Author/Year)

درخواست کتاب

مشاهده تاریخچه امانت‌ها

سایر عملکردهای دانشجو که محدود به عملیات خودش است

۴.۳ منوی کارمند (Employee)

تغییر پسورد

اضافه کردن کتاب

جستجوهای مختلف کتاب

ویرایش اطلاعات کتاب

بررسی و تایید درخواست امانت

مشاهده گزارش تاریخچه امانت‌ها

فعال/غیرفعال کردن دانشجو

دریافت کتاب‌های امانت گرفته شده

۴.۴ منوی مدیر (Admin)

تعریف کارمند کتابخانه

مشاهده عملکرد کارمند (viewEmployeePerformance)

مشاهده آمار امانت‌ها (viewBorrowStatistics)

مشاهده تاریخچه امانت‌های دانشجو (showStudentBorrowHistory)

نمایش ۱۰ دانشجوی با بیشترین تأخیر (viewTop10LateStudents)

۵. تغییرات فایل JSON

users.json:

افزودن ویژگی isActive برای دانشجویان

books.json:

افزودن ویژگی isAvailable

borrow_records.json:

ثبت تاریخ دریافت، تحویل و موعد تحویل (dueDate)

book_requests.json:

ثبت نام دانشجو، ISBN کتاب، تاریخ درخواست، تاریخ پیشنهادی تحویل